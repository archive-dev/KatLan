{
  "name": "KatLan",
  "scopeName": "source.katlan",
  "patterns": [
    {
      "name": "keyword.control.katlan",
      "match": "\\b(if|else|for|while|try|catch|finally|switch|case|default|return|break|continue)\\b"
    },
    {
      "name": "keyword.operator.katlan",
      "match": "\\b(and|or|not|xor|==|!=|<=|>=|<|>|=|\\+|\\-|\\*|\\/|%|\\*\\*|\\|\\||&&|\\?\\?|\\!)\\b"
    },
    {
      "name": "keyword.declaration.katlan",
      "match": "\\b(package|import|class|interface|enum|annotation|extends|implements|new|public|private|protected|static|final|abstract|const|var|def)\\b"
    },
    {
      "name": "constant.language.boolean.katlan",
      "match": "\\b(true|false|null)\\b"
    },
    {
      "name": "storage.type.primitive.katlan",
      "match": "\\b(int|float|double|long|short|byte|bool|str|void)\\b"
    },
    {
      "name": "entity.name.type.katlan",
      "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "variable.parameter.katlan",
      "match": "\\b[a-z][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "string.quoted.double.katlan",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.katlan",
          "match": "\\\\."
        }
      ]
    },
    {
      "name": "string.quoted.single.katlan",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.katlan",
          "match": "\\\\."
        }
      ]
    },
    {
      "name": "comment.line.double-slash.katlan",
      "match": "//.*$"
    },
    {
      "name": "comment.block.katlan",
      "begin": "/\\*",
      "end": "\\*/"
    }
  ],
  "repository": {}
}